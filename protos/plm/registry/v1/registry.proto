// Copyright 2023 Sylk Technologies
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// Generated by sylk.build
syntax = "proto3";

package plm.registry.v1;


import "plm/package/v1/package.proto";
import "plm/library/v1/library.proto";
import "google/protobuf/empty.proto";

service RegistryService {
	rpc Metadata (plm.registry.v1.MetadataRequest) returns (plm.registry.v1.MetadataResponse);
	rpc Download (plm.registry.v1.DownloadRequest) returns (plm.registry.v1.DownloadResponse);
	rpc Publish (plm.registry.v1.PublishRequest) returns (google.protobuf.Empty);
	rpc Upload (stream plm.registry.v1.UploadRequest) returns (google.protobuf.Empty);
}

message UploadRequest {
	string library = 1;
	plm.package.v1.File file = 2;
}

message PartialDownloadRequest {

	// The library full name e.g: 'some_package' / '@org/some_package'
	string name = 1;
	// A list of full 'library/package' names
	repeated string packages = 2;
}

message DownloadRequest {

	plm.registry.v1.Compressions compression = 3;
	oneof full_or_partial {
		string full = 1;
		plm.registry.v1.PartialDownloadRequest partial = 2;
	};
}

message DownloadResponse {

	oneof protobuf_or_gz {
		plm.library.v1.Library protobuf = 1;
		bytes gz = 2;
	};
}

message PublishRequest {

	plm.library.v1.Library lib = 1;
}

message MetadataRequest {

	string library = 1;
}

message Version {

	string name = 1;
	string version = 2;
	map<string, string> dependencies = 3;
}

message MetadataResponse {

	string name = 1;
	string description = 2;
	map<string, plm.registry.v1.Version> versions = 3;
}


enum Compressions {
	PROTOBUF = 0;
	GZ = 1;
}